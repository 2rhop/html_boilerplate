// RESPONSIVE QUERIES
/*
0 - 576px         phone-portrait
576 - 768px       phone-landscape
768px - 992px     tablet-portrait
992px - 1200px    tablet-landscape
1200px -  1800px  default-styles
1800px - ...      large-desktops
 */

/*
RESPONSIVE BREAKPOINTS
- phone
- phone-land
- tab-port
- tab-land
- big-desk
 */
@mixin responsive($breakpoint, $dpr: 1, $start: max) {
  @if $breakpoint == mobile-mini {
    @media (#{$start}-width: 420px) and (-webkit-min-device-pixel-ratio: $dpr) {
      @content;
    }
  }
  @if $breakpoint == mobile {
    @media (#{$start}-width: 576px) and (-webkit-min-device-pixel-ratio: $dpr) {
      @content;
    }
  }
  @if $breakpoint == mobile-land {
    @media (#{$start}-width: 768px) and (-webkit-min-device-pixel-ratio: $dpr) {
      @content;
    }
  }
  @if $breakpoint == tablet {
    @media (#{$start}-width: 992px) and (-webkit-min-device-pixel-ratio: $dpr) {
      @content;
    }
  }
  @if $breakpoint == tablet-land {
    @media (#{$start}-width: 1200px) and (-webkit-min-device-pixel-ratio: $dpr) {
      @content;
    }
  }
  @if $breakpoint == laptop {
    @media (#{$start}-width: 1366px) and (-webkit-min-device-pixel-ratio: $dpr) {
      @content;
    }
  }
  @if $breakpoint == big-desk {
    @media (min-width: 1800px) and (-webkit-min-device-pixel-ratio: $dpr) {
      @content;
    }
  }
}

/**
  mixin to autogenerate GRID layout
 */
@mixin create-grid-layout($prefix: '') {
  $cols: $grid-columns;

  @for $col from 1 through $cols {
    .#{$prefix}col-start-#{$col},
    .#{$prefix}col-s-#{$col} {
      grid-column: #{$col} / span fill;

      @for $width from 1 through $cols {
        &.#{$prefix}col-width-#{$width},
        &.#{$prefix}col-w-#{$width} {
          grid-column: #{$col} / span #{$width};
        }
      }
    }
  }
}

